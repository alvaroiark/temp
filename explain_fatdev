"QUERY PLAN"
"Append  (cost=1921109.80..4619745.16 rows=224 width=1236)"
"  ->  Subquery Scan on ""*SELECT* 1""  (cost=1921109.80..1921148.13 rows=210 width=1031)"
"        ->  Unique  (cost=1921109.80..1921145.50 rows=210 width=1027)"
"              ->  Sort  (cost=1921109.80..1921110.33 rows=210 width=1027)"
"                    Sort Key: sd2010.d2_filial, sd2010.d2_tes, sb1010.b1_grupo, sbm010.bm_desc, zz1010.zz1_cod, zz1010.zz1_desc, sd2010.d2_emissao, (((SUBSTRING(sd2010.d2_emissao FROM 1 FOR 4) || '-'::text) || SUBSTRING(sd2010.d2_emissao FROM 5 FOR 2))), sf2010.f2_doc, sf2010.f2_serie, sf2010.f2_especie, sd2010.d2_quant, sd2010.d2_prcven, sd2010.d2_total, sd2010.d2_baseicm, sd2010.d2_valicm, sd2010.d2_valipi, sd2010.d2_valins, sd2010.d2_valiss, sd2010.d2_custo1, sd2010.d2_valimp5, sd2010.d2_valimp6, sd2010.d2_valpis, sd2010.d2_valcof, sf4010.f4_texto, sf4010.f4_xtpop, sx5010.x5_descri, sf4010.f4_estoque, sb1010.b1_cod, sd2010.d2_local, sb1010.b1_desc, sb1010.b1_peso, sb1010.b1_pesbru, sd2010.d2_comis1, sd2010.d2_seguro, sd2010.d2_valfre, sd2010.d2_tipo, sd2010.d2_cliente, sd2010.d2_loja, (COALESCE(sa1010.a1_nome, sa2010.a2_nome)), (COALESCE(sa1010.a1_cgc, sa2010.a2_cgc)), sd2010.d2_ccusto, sd2010.d2_clvl, sd2010.d2_itemcc, sd2010.d2_cf, sf4010.f4_sittrib, sf4010.f4_ctipi, sf4010.f4_cstpis, sf4010.f4_cstcof, sf4010.f4_cstiss, sf4010.f4_lficm, sd2010.d2_despesa, (CASE WHEN (sf2010.f2_valmerc = '0'::double precision) THEN '0'::double precision ELSE (sf2010.f2_valirrf * (sd2010.d2_total / sf2010.f2_valmerc)) END), (CASE WHEN (sf2010.f2_valmerc = '0'::double precision) THEN '0'::double precision ELSE (sf2010.f2_valcsll * (sd2010.d2_total / sf2010.f2_valmerc)) END), m0.m0_filial, cth.cth_desc01, ctd.ctd_desc01, ctd.ctd_item, ctt.ctt_desc01, sf3.f3_codrsef, sd2010.d2_pedido, c6.c6_abatmat, (CASE WHEN ((sf32.f3_baseicm = '0'::double precision) OR (sf32.f3_baseicm IS NULL)) THEN sft2.ft_baseicm ELSE sf32.f3_baseicm END), c5.c5_naturez, cno.on_cno, sd2010.r_e_c_n_o_, sb1010.b1_locpad"
"                    ->  Gather  (cost=1921076.24..1921101.70 rows=210 width=1027)"
"                          Workers Planned: 2"
"                          ->  HashAggregate  (cost=1920076.24..1920080.70 rows=105 width=1027)"
"                                Group Key: sd2010.d2_filial, sd2010.d2_tes, sb1010.b1_grupo, sbm010.bm_desc, zz1010.zz1_cod, zz1010.zz1_desc, sd2010.d2_emissao, sd2010.d2_emissao, ((SUBSTRING(sd2010.d2_emissao FROM 1 FOR 4) || '-'::text) || SUBSTRING(sd2010.d2_emissao FROM 5 FOR 2)), sf2010.f2_doc, sf2010.f2_serie, sf2010.f2_especie, sd2010.d2_quant, sd2010.d2_prcven, sd2010.d2_total, sd2010.d2_baseicm, sd2010.d2_valicm, sd2010.d2_valipi, sd2010.d2_valins, sd2010.d2_valiss, sd2010.d2_custo1, sd2010.d2_valimp5, sd2010.d2_valimp6, sd2010.d2_valpis, sd2010.d2_valcof, 0, sf4010.f4_texto, sf4010.f4_xtpop, sx5010.x5_descri, sf4010.f4_estoque, sb1010.b1_cod, sd2010.d2_local, sb1010.b1_desc, sb1010.b1_peso, sb1010.b1_pesbru, sd2010.d2_comis1, sd2010.d2_seguro, sd2010.d2_valfre, sd2010.d2_tipo, 'S'::text, sd2010.d2_cliente, sd2010.d2_loja, COALESCE(sa1010.a1_nome, sa2010.a2_nome), COALESCE(sa1010.a1_cgc, sa2010.a2_cgc), sd2010.d2_ccusto, sd2010.d2_clvl, sd2010.d2_itemcc, sd2010.d2_cf, sf4010.f4_sittrib, sf4010.f4_ctipi, sf4010.f4_cstpis, sf4010.f4_cstcof, sf4010.f4_cstiss, sf4010.f4_lficm, sd2010.d2_despesa, CASE WHEN (sf2010.f2_valmerc = '0'::double precision) THEN '0'::double precision ELSE (sf2010.f2_valirrf * (sd2010.d2_total / sf2010.f2_valmerc)) END, CASE WHEN (sf2010.f2_valmerc = '0'::double precision) THEN '0'::double precision ELSE (sf2010.f2_valcsll * (sd2010.d2_total / sf2010.f2_valmerc)) END, m0.m0_filial, cth.cth_desc01, ctd.ctd_desc01, ctd.ctd_item, ctt.ctt_desc01, sf3.f3_codrsef, sd2010.d2_pedido, ''::text, ''::text, ''::text, '0'::text, c6.c6_abatmat, CASE WHEN ((sf32.f3_baseicm = '0'::double precision) OR (sf32.f3_baseicm IS NULL)) THEN sft2.ft_baseicm ELSE sf32.f3_baseicm END, ''::text, c5.c5_naturez, cno.on_cno, sd2010.r_e_c_n_o_, sd2010.d2_valimp5, sd2010.d2_valimp6, sb1010.b1_locpad"
"                                ->  Parallel Hash Left Join  (cost=1915091.13..1920056.03 rows=105 width=1027)"
"                                      Hash Cond: ((c5.c5_filial = c6.c6_filial) AND (c5.c5_num = c6.c6_num) AND (c5.c5_cliente = c6.c6_cli) AND (c5.c5_lojacli = c6.c6_loja) AND (sd2010.d2_cod = c6.c6_produto) AND (sd2010.d2_itempv = c6.c6_item))"
"                                      ->  Hash Left Join  (cost=1783102.07..1785980.67 rows=105 width=842)"
"                                            Hash Cond: ((c5.c5_cno = cno.on_codigo) AND (SUBSTRING(c5.c5_filial FROM 1 FOR 4) = (cno.on_filial)::text))"
"                                            ->  Parallel Hash Left Join  (cost=1783097.82..1785975.22 rows=105 width=834)"
"                                                  Hash Cond: ((sd2010.d2_pedido = c5.c5_num) AND (sd2010.d2_cliente = c5.c5_cliente) AND (sd2010.d2_loja = c5.c5_lojacli) AND (sd2010.d2_filial = c5.c5_filial))"
"                                                  ->  Parallel Hash Left Join  (cost=1658706.82..1659837.68 rows=105 width=792)"
"                                                        Hash Cond: ((sd2010.d2_doc = sft2.ft_nfiscal) AND (sd2010.d2_serie = sft2.ft_serie) AND (sd2010.d2_cliente = sft2.ft_cliefor) AND (sd2010.d2_loja = sft2.ft_loja) AND (sd2010.d2_cf = sft2.ft_cfop) AND (sd2010.d2_emissao = sft2.ft_emissao) AND (sd2010.d2_total = sft2.ft_valcont))"
"                                                        ->  Merge Left Join  (cost=862499.16..862847.24 rows=105 width=798)"
"                                                              Merge Cond: ((sd2010.d2_cliente = sa2010.a2_cod) AND (sd2010.d2_loja = sa2010.a2_loja))"
"                                                              Join Filter: (sd2010.d2_tipo = ANY ('{B,D}'::bpchar[]))"
"                                                              Filter: ((sa2010.d_e_l_e_t_ <> '*'::bpchar) OR (sa2010.d_e_l_e_t_ IS NULL))"
"                                                              ->  Merge Left Join  (cost=855391.62..855586.68 rows=105 width=765)"
"                                                                    Merge Cond: ((sd2010.d2_cliente = sa1010.a1_cod) AND (sd2010.d2_loja = sa1010.a1_loja))"
"                                                                    Join Filter: (sd2010.d2_tipo <> ALL ('{B,D}'::bpchar[]))"
"                                                                    Filter: ((sa1010.d_e_l_e_t_ <> '*'::bpchar) OR (sa1010.d_e_l_e_t_ IS NULL))"
"                                                                    ->  Sort  (cost=846548.91..846549.17 rows=105 width=731)"
"                                                                          Sort Key: sd2010.d2_cliente, sd2010.d2_loja"
"                                                                          ->  Parallel Hash Left Join  (cost=845697.37..846545.38 rows=105 width=731)"
"                                                                                Hash Cond: ((sd2010.d2_doc = sf32.f3_nfiscal) AND (sd2010.d2_serie = sf32.f3_serie) AND (sd2010.d2_cliente = sf32.f3_cliefor) AND (sd2010.d2_loja = sf32.f3_loja) AND (sd2010.d2_cf = sf32.f3_cfo) AND (sd2010.d2_emissao = sf32.f3_emissao) AND (sd2010.d2_total = sf32.f3_valcont))"
"                                                                                ->  Parallel Hash Left Join  (cost=580783.40..581210.61 rows=105 width=723)"
"                                                                                      Hash Cond: ((sd2010.d2_filial = sf3.f3_filial) AND (sd2010.d2_doc = sf3.f3_nfiscal) AND (sd2010.d2_serie = sf3.f3_serie) AND (sd2010.d2_cliente = sf3.f3_cliefor) AND (sd2010.d2_loja = sf3.f3_loja) AND (sd2010.d2_cf = sf3.f3_cfo) AND (sd2010.d2_emissao = sf3.f3_emissao))"
"                                                                                      ->  Hash Left Join  (cost=315366.72..315372.22 rows=105 width=719)"
"                                                                                            Hash Cond: (sd2010.d2_clvl = cth.cth_clvl)"
"                                                                                            ->  Parallel Hash Left Join  (cost=314918.75..314922.80 rows=105 width=658)"
"                                                                                                  Hash Cond: (sd2010.d2_itemcc = ctd.ctd_item)"
"                                                                                                  ->  Hash Left Join  (cost=311222.92..311225.95 rows=105 width=607)"
"                                                                                                        Hash Cond: (sd2010.d2_ccusto = ctt.ctt_custo)"
"                                                                                                        ->  Merge Left Join  (cost=311054.19..311055.79 rows=105 width=566)"
"                                                                                                              Merge Cond: (sd2010.d2_filial = m0.m0_filial)"
"                                                                                                              ->  Sort  (cost=311037.12..311037.39 rows=105 width=524)"
"                                                                                                                    Sort Key: sd2010.d2_filial"
"                                                                                                                    ->  Hash Left Join  (cost=311027.27..311033.60 rows=105 width=524)"
"                                                                                                                          Hash Cond: (sf4010.f4_xtpop = sx5010.x5_chave)"
"                                                                                                                          ->  Hash Left Join  (cost=310465.55..310470.69 rows=105 width=468)"
"                                                                                                                                Hash Cond: (sd2010.d2_tes = sf4010.f4_codigo)"
"                                                                                                                                ->  Hash Left Join  (cost=310387.94..310391.63 rows=105 width=424)"
"                                                                                                                                      Hash Cond: ((sb1010.b1_subfam = zz1010.zz1_cod) AND (sb1010.b1_grupo = zz1010.zz1_fam))"
"                                                                                                                                      ->  Merge Left Join  (cost=310370.61..310372.95 rows=105 width=393)"
"                                                                                                                                            Merge Cond: (sb1010.b1_grupo = sbm010.bm_grupo)"
"                                                                                                                                            ->  Sort  (cost=310352.15..310352.41 rows=105 width=362)"
"                                                                                                                                                  Sort Key: sb1010.b1_grupo"
"                                                                                                                                                  ->  Parallel Hash Left Join  (cost=139662.66..310348.62 rows=105 width=362)"
"                                                                                                                                                        Hash Cond: (sd2010.d2_cod = sb1010.b1_cod)"
"                                                                                                                                                        ->  Parallel Hash Left Join  (cost=124025.85..294710.98 rows=105 width=299)"
"                                                                                                                                                              Hash Cond: ((sd2010.d2_filial = sf2010.f2_filial) AND (sd2010.d2_doc = sf2010.f2_doc) AND (sd2010.d2_serie = sf2010.f2_serie))"
"                                                                                                                                                              ->  Parallel Seq Scan on sd2010  (cost=0.00..168771.73 rows=105 width=255)"
"                                                                                                                                                                    Filter: ((d_e_l_e_t_ <> '*'::bpchar) AND (d2_total > '0'::double precision) AND (d2_filial <> ALL ('{790199,990199}'::bpchar[])) AND (d2_emissao >= '20240301'::bpchar) AND (d2_emissao <= '20240305'::bpchar) AND (d2_emissao >= '20240301'::bpchar) AND (d2_emissao <= '20240305'::bpchar))"
"                                                                                                                                                              ->  Parallel Hash  (cost=118752.52..118752.52 rows=193390 width=51)"
"                                                                                                                                                                    ->  Parallel Seq Scan on sf2010  (cost=0.00..118752.52 rows=193390 width=51)"
"                                                                                                                                                                          Filter: (d_e_l_e_t_ <> '*'::bpchar)"
"                                                                                                                                                        ->  Parallel Hash  (cost=15399.91..15399.91 rows=18952 width=63)"
"                                                                                                                                                              ->  Parallel Seq Scan on sb1010  (cost=0.00..15399.91 rows=18952 width=63)"
"                                                                                                                                                                    Filter: (d_e_l_e_t_ <> '*'::bpchar)"
"                                                                                                                                            ->  Sort  (cost=18.46..18.85 rows=153 width=36)"
"                                                                                                                                                  Sort Key: sbm010.bm_grupo"
"                                                                                                                                                  ->  Seq Scan on sbm010  (cost=0.00..12.91 rows=153 width=36)"
"                                                                                                                                                        Filter: (d_e_l_e_t_ <> '*'::bpchar)"
"                                                                                                                                      ->  Hash  (cost=11.15..11.15 rows=412 width=41)"
"                                                                                                                                            ->  Seq Scan on zz1010  (cost=0.00..11.15 rows=412 width=41)"
"                                                                                                                                                  Filter: (d_e_l_e_t_ <> '*'::bpchar)"
"                                                                                                                                ->  Hash  (cost=73.31..73.31 rows=344 width=48)"
"                                                                                                                                      ->  Seq Scan on sf4010  (cost=0.00..73.31 rows=344 width=48)"
"                                                                                                                                            Filter: (d_e_l_e_t_ <> '*'::bpchar)"
"                                                                                                                          ->  Hash  (cost=561.63..561.63 rows=7 width=63)"
"                                                                                                                                ->  Seq Scan on sx5010  (cost=0.00..561.63 rows=7 width=63)"
"                                                                                                                                      Filter: ((d_e_l_e_t_ <> '*'::bpchar) AND (x5_tabela = 'ZZ'::bpchar))"
"                                                                                                              ->  Sort  (cost=17.07..17.19 rows=48 width=42)"
"                                                                                                                    Sort Key: m0.m0_filial"
"                                                                                                                    ->  Seq Scan on sys_company m0  (cost=0.00..15.72 rows=48 width=42)"
"                                                                                                                          Filter: (d_e_l_e_t_ = ''::bpchar)"
"                                                                                                        ->  Hash  (cost=159.36..159.36 rows=749 width=51)"
"                                                                                                              ->  Seq Scan on ctt010 ctt  (cost=0.00..159.36 rows=749 width=51)"
"                                                                                                                    Filter: (d_e_l_e_t_ <> '*'::bpchar)"
"                                                                                                  ->  Parallel Hash  (cost=3343.96..3343.96 rows=28150 width=51)"
"                                                                                                        ->  Parallel Seq Scan on ctd010 ctd  (cost=0.00..3343.96 rows=28150 width=51)"
"                                                                                                              Filter: (d_e_l_e_t_ <> '*'::bpchar)"
"                                                                                            ->  Hash  (cost=386.99..386.99 rows=4879 width=71)"
"                                                                                                  ->  Seq Scan on cth010 cth  (cost=0.00..386.99 rows=4879 width=71)"
"                                                                                                        Filter: (d_e_l_e_t_ <> '*'::bpchar)"
"                                                                                      ->  Parallel Hash  (cost=265340.37..265340.37 rows=2775 width=50)"
"                                                                                            ->  Parallel Seq Scan on sf3010 sf3  (cost=0.00..265340.37 rows=2775 width=50)"
"                                                                                                  Filter: ((d_e_l_e_t_ <> '*'::bpchar) AND (f3_codrsef <> ALL ('{100,""""}'::bpchar[])) AND (f3_especie = 'SPED'::bpchar) AND (f3_serie = '1'::bpchar))"
"                                                                                ->  Parallel Hash  (cost=264270.45..264270.45 rows=23401 width=55)"
"                                                                                      ->  Parallel Seq Scan on sf3010 sf32  (cost=0.00..264270.45 rows=23401 width=55)"
"                                                                                            Filter: ((d_e_l_e_t_ <> '*'::bpchar) AND (f3_especie <> 'SPED'::bpchar) AND (f3_tipo = 'S'::bpchar))"
"                                                                    ->  Sort  (cost=8840.81..8905.68 rows=25947 width=46)"
"                                                                          Sort Key: sa1010.a1_cod, sa1010.a1_loja"
"                                                                          ->  Seq Scan on sa1010  (cost=0.00..6938.47 rows=25947 width=46)"
"                                                              ->  Sort  (cost=7105.94..7159.46 rows=21408 width=45)"
"                                                                    Sort Key: sa2010.a2_cod, sa2010.a2_loja"
"                                                                    ->  Seq Scan on sa2010  (cost=0.00..5566.08 rows=21408 width=45)"
"                                                        ->  Parallel Hash  (cost=795315.64..795315.64 rows=32437 width=55)"
"                                                              ->  Parallel Seq Scan on sft010 sft2  (cost=0.00..795315.64 rows=32437 width=55)"
"                                                                    Filter: ((d_e_l_e_t_ <> '*'::bpchar) AND (ft_especie <> 'SPED'::bpchar) AND (ft_tipo = 'S'::bpchar))"
"                                                  ->  Parallel Hash  (cost=118814.79..118814.79 rows=193660 width=42)"
"                                                        ->  Parallel Seq Scan on sc5010 c5  (cost=0.00..118814.79 rows=193660 width=42)"
"                                                              Filter: (d_e_l_e_t_ <> '*'::bpchar)"
"                                            ->  Hash  (cost=3.03..3.03 rows=82 width=29)"
"                                                  ->  Seq Scan on son010 cno  (cost=0.00..3.03 rows=82 width=29)"
"                                                        Filter: (d_e_l_e_t_ <> '*'::bpchar)"
"                                      ->  Parallel Hash  (cost=124912.04..124912.04 rows=203561 width=51)"
"                                            ->  Parallel Seq Scan on sc6010 c6  (cost=0.00..124912.04 rows=203561 width=51)"
"                                                  Filter: (d_e_l_e_t_ <> '*'::bpchar)"
"  ->  Subquery Scan on ""*SELECT* 2""  (cost=968854.74..1348638.37 rows=8 width=1076)"
"        ->  Unique  (cost=968854.74..1348638.15 rows=8 width=1092)"
"              ->  Gather Merge  (cost=968854.74..1348636.77 rows=8 width=1092)"
"                    Workers Planned: 2"
"                    ->  Incremental Sort  (cost=967854.71..1347635.82 rows=3 width=1092)"
"                          Sort Key: sd1010.d1_filial, sd1010.d1_tes, sb1010_1.b1_grupo, sbm010_1.bm_desc, zz1010_1.zz1_cod, zz1010_1.zz1_desc, sf1010.f1_emissao, sf1010.f1_dtdigit, (((SUBSTRING(sf1010.f1_dtdigit FROM 1 FOR 4) || '-'::text) || SUBSTRING(sd1010.d1_dtdigit FROM 5 FOR 2))), sf1010.f1_doc, sf1010.f1_serie, sf1010.f1_especie, ((- sd1010.d1_quant)), ((- sd1010.d1_vunit)), ((- sd1010.d1_total)), sd1010.d1_baseicm, ((- sd1010.d1_valicm)), ((- sd1010.d1_valipi)), ((- sd1010.d1_valins)), ((- sd1010.d1_valiss)), ((- sd1010.d1_custo)), ((- sd1010.d1_valimp5)), ((- sd1010.d1_valimp6)), ((- sd1010.d1_valpis)), ((- sd1010.d1_valcof)), ((- sd1010.d1_valdesc)), sf4010_1.f4_texto, sf4010_1.f4_xtpop, sx5010_1.x5_descri, sf4010_1.f4_estoque, sb1010_1.b1_cod, sd1010.d1_local, sb1010_1.b1_desc, sb1010_1.b1_peso, sb1010_1.b1_pesbru, ((- sd1010.d1_seguro)), ((- sd1010.d1_valfre)), sd1010.d1_fornece, sd1010.d1_loja, (COALESCE(sa1010_1.a1_nome, sa2010_1.a2_nome)), (COALESCE(sa1010_1.a1_cgc, sa2010_1.a2_cgc)), sd1010.d1_cc, sd1010.d1_clvl, sd1010.d1_itemcta, sd1010.d1_cf, sf4010_1.f4_sittrib, sf4010_1.f4_ctipi, sf4010_1.f4_cstpis, sf4010_1.f4_cstcof, sf4010_1.f4_cstiss, sf4010_1.f4_lficm, ((- sd1010.d1_despesa)), (CASE WHEN (sf1010.f1_valmerc > '0'::double precision) THEN (sf1010.f1_valirf * (sd1010.d1_total / sf1010.f1_valmerc)) ELSE '0'::double precision END), (CASE WHEN (sf1010.f1_valmerc > '0'::double precision) THEN (sf1010.f1_valcsll * (sd1010.d1_total / sf1010.f1_valmerc)) ELSE '0'::double precision END), m0_1.m0_filial, cth_1.cth_desc01, ctd_1.ctd_desc01, ctd_1.ctd_item, ctt_1.ctt_desc01, sd1010.d1_pedido, lgi.usr_codigo, lga.usr_codigo, sc7.c7_obs, sc7.c7_num, e2.e2_naturez, sd1010.r_e_c_n_o_, sd1010.d1_valimp5, sd1010.d1_valimp6, sb1010_1.b1_locpad"
"                          Presorted Key: sd1010.d1_filial"
"                          ->  Nested Loop Left Join  (cost=777964.21..1347635.69 rows=3 width=1092)"
"                                Join Filter: ((lga.usr_id)::text = ((((((((((((SUBSTRING(sc7.c7_userlga FROM 11 FOR 1) || SUBSTRING(sc7.c7_userlga FROM 15 FOR 1)) || SUBSTRING(sc7.c7_userlga FROM 2 FOR 1)) || SUBSTRING(sc7.c7_userlga FROM 6 FOR 1)) || SUBSTRING(sc7.c7_userlga FROM 10 FOR 1)) || SUBSTRING(sc7.c7_userlga FROM 14 FOR 1)) || SUBSTRING(sc7.c7_userlga FROM 1 FOR 1)) || SUBSTRING(sc7.c7_userlga FROM 5 FOR 1)) || SUBSTRING(sc7.c7_userlga FROM 9 FOR 1)) || SUBSTRING(sc7.c7_userlga FROM 13 FOR 1)) || SUBSTRING(sc7.c7_userlga FROM 17 FOR 1)) || SUBSTRING(sc7.c7_userlga FROM 4 FOR 1)) || SUBSTRING(sc7.c7_userlga FROM 8 FOR 1)))"
"                                ->  Nested Loop Left Join  (cost=777964.21..1347459.84 rows=1 width=930)"
"                                      Join Filter: ((lgi.usr_id)::text = ((((((((((((SUBSTRING(sc7.c7_userlgi FROM 11 FOR 1) || SUBSTRING(sc7.c7_userlgi FROM 15 FOR 1)) || SUBSTRING(sc7.c7_userlgi FROM 2 FOR 1)) || SUBSTRING(sc7.c7_userlgi FROM 6 FOR 1)) || SUBSTRING(sc7.c7_userlgi FROM 10 FOR 1)) || SUBSTRING(sc7.c7_userlgi FROM 14 FOR 1)) || SUBSTRING(sc7.c7_userlgi FROM 1 FOR 1)) || SUBSTRING(sc7.c7_userlgi FROM 5 FOR 1)) || SUBSTRING(sc7.c7_userlgi FROM 9 FOR 1)) || SUBSTRING(sc7.c7_userlgi FROM 13 FOR 1)) || SUBSTRING(sc7.c7_userlgi FROM 17 FOR 1)) || SUBSTRING(sc7.c7_userlgi FROM 4 FOR 1)) || SUBSTRING(sc7.c7_userlgi FROM 8 FOR 1)))"
"                                      ->  Nested Loop Left Join  (cost=777964.21..1347284.20 rows=1 width=922)"
"                                            Join Filter: ((sd1010.d1_filial = sc7.c7_filial) AND (sd1010.d1_pedido = sc7.c7_num) AND (sd1010.d1_fornece = sc7.c7_fornece) AND (sd1010.d1_loja = sc7.c7_loja) AND (sd1010.d1_item = sc7.c7_item))"
"                                            ->  Nested Loop Left Join  (cost=777964.21..1075054.35 rows=1 width=787)"
"                                                  Join Filter: ((sf1010.f1_doc = e2.e2_num) AND (sf1010.f1_serie = e2.e2_prefixo) AND (sf1010.f1_fornece = e2.e2_fornece) AND (sf1010.f1_loja = e2.e2_loja) AND (sf1010.f1_filial = e2.e2_filial))"
"                                                  ->  Nested Loop Left Join  (cost=777964.21..793398.00 rows=1 width=793)"
"                                                        ->  Nested Loop Left Join  (cost=777963.93..793286.65 rows=1 width=732)"
"                                                              ->  Nested Loop Left Join  (cost=777963.51..792239.93 rows=1 width=681)"
"                                                                    Join Filter: (sd1010.d1_cc = ctt_1.ctt_custo)"
"                                                                    ->  Nested Loop Left Join  (cost=777963.51..792071.21 rows=1 width=640)"
"                                                                          Join Filter: ((sd1010.d1_tipo <> ALL ('{B,D}'::bpchar[])) AND (sd1010.d1_fornece = sa2010_1.a2_cod) AND (sd1010.d1_loja = sa2010_1.a2_loja))"
"                                                                          Filter: ((sa2010_1.d_e_l_e_t_ <> '*'::bpchar) OR (sa2010_1.d_e_l_e_t_ IS NULL))"
"                                                                          ->  Nested Loop Left Join  (cost=777963.51..786076.97 rows=1 width=607)"
"                                                                                Join Filter: ((sd1010.d1_tipo = ANY ('{B,D}'::bpchar[])) AND (sd1010.d1_fornece = sa1010_1.a1_cod) AND (sd1010.d1_loja = sa1010_1.a1_loja))"
"                                                                                Filter: ((sa1010_1.d_e_l_e_t_ <> '*'::bpchar) OR (sa1010_1.d_e_l_e_t_ IS NULL))"
"                                                                                ->  Nested Loop Left Join  (cost=777963.51..778619.56 rows=1 width=573)"
"                                                                                      Join Filter: (sf4010_1.f4_xtpop = sx5010_1.x5_chave)"
"                                                                                      ->  Nested Loop  (cost=777963.51..778057.84 rows=1 width=517)"
"                                                                                            Join Filter: (sd1010.d1_tes = sf4010_1.f4_codigo)"
"                                                                                            ->  Nested Loop Left Join  (cost=777963.51..777980.23 rows=1 width=473)"
"                                                                                                  Join Filter: (sd1010.d1_filial = m0_1.m0_filial)"
"                                                                                                  ->  Merge Join  (cost=777963.51..777963.90 rows=1 width=431)"
"                                                                                                        Merge Cond: ((sd1010.d1_filial = sf1010.f1_filial) AND (sd1010.d1_doc = sf1010.f1_doc) AND (sd1010.d1_serie = sf1010.f1_serie) AND (sd1010.d1_fornece = sf1010.f1_fornece) AND (sd1010.d1_loja = sf1010.f1_loja))"
"                                                                                                        ->  Sort  (cost=625609.87..625609.93 rows=24 width=366)"
"                                                                                                              Sort Key: sd1010.d1_filial, sd1010.d1_doc, sd1010.d1_serie, sd1010.d1_fornece, sd1010.d1_loja"
"                                                                                                              ->  Hash Join  (cost=15674.63..625609.32 rows=24 width=366)"
"                                                                                                                    Hash Cond: ((sb1010_1.b1_grupo = sbm010_1.bm_grupo) AND (sb1010_1.b1_subfam = zz1010_1.zz1_cod))"
"                                                                                                                    ->  Parallel Hash Join  (cost=15636.81..625563.65 rows=624 width=304)"
"                                                                                                                          Hash Cond: (sd1010.d1_cod = sb1010_1.b1_cod)"
"                                                                                                                          ->  Parallel Seq Scan on sd1010  (cost=0.00..609921.89 rows=624 width=257)"
"                                                                                                                                Filter: ((d_e_l_e_t_ <> '*'::bpchar) AND (d1_tipo = 'D'::bpchar))"
"                                                                                                                          ->  Parallel Hash  (cost=15399.91..15399.91 rows=18952 width=63)"
"                                                                                                                                ->  Parallel Seq Scan on sb1010 sb1010_1  (cost=0.00..15399.91 rows=18952 width=63)"
"                                                                                                                                      Filter: (d_e_l_e_t_ <> '*'::bpchar)"
"                                                                                                                    ->  Hash  (cost=31.64..31.64 rows=412 width=77)"
"                                                                                                                          ->  Hash Join  (cost=14.82..31.64 rows=412 width=77)"
"                                                                                                                                Hash Cond: (zz1010_1.zz1_fam = sbm010_1.bm_grupo)"
"                                                                                                                                ->  Seq Scan on zz1010 zz1010_1  (cost=0.00..11.15 rows=412 width=41)"
"                                                                                                                                      Filter: (d_e_l_e_t_ <> '*'::bpchar)"
"                                                                                                                                ->  Hash  (cost=12.91..12.91 rows=153 width=36)"
"                                                                                                                                      ->  Seq Scan on sbm010 sbm010_1  (cost=0.00..12.91 rows=153 width=36)"
"                                                                                                                                            Filter: (d_e_l_e_t_ <> '*'::bpchar)"
"                                                                                                        ->  Sort  (cost=152353.65..152353.65 rows=1 width=79)"
"                                                                                                              Sort Key: sf1010.f1_filial, sf1010.f1_doc, sf1010.f1_serie, sf1010.f1_fornece, sf1010.f1_loja"
"                                                                                                              ->  Seq Scan on sf1010  (cost=0.00..152353.64 rows=1 width=79)"
"                                                                                                                    Filter: ((d_e_l_e_t_ <> '*'::bpchar) AND (f1_dtdigit >= '20240301'::bpchar) AND (f1_dtdigit <= '20240305'::bpchar) AND (f1_emissao >= '20240301'::bpchar) AND (f1_emissao <= '20240305'::bpchar))"
"                                                                                                  ->  Seq Scan on sys_company m0_1  (cost=0.00..15.72 rows=48 width=42)"
"                                                                                                        Filter: (d_e_l_e_t_ = ''::bpchar)"
"                                                                                            ->  Seq Scan on sf4010 sf4010_1  (cost=0.00..73.31 rows=344 width=48)"
"                                                                                                  Filter: (d_e_l_e_t_ <> '*'::bpchar)"
"                                                                                      ->  Seq Scan on sx5010 sx5010_1  (cost=0.00..561.63 rows=7 width=63)"
"                                                                                            Filter: ((d_e_l_e_t_ <> '*'::bpchar) AND (x5_tabela = 'ZZ'::bpchar))"
"                                                                                ->  Seq Scan on sa1010 sa1010_1  (cost=0.00..6938.47 rows=25947 width=46)"
"                                                                          ->  Seq Scan on sa2010 sa2010_1  (cost=0.00..5566.08 rows=21408 width=45)"
"                                                                    ->  Seq Scan on ctt010 ctt_1  (cost=0.00..159.36 rows=749 width=51)"
"                                                                          Filter: (d_e_l_e_t_ <> '*'::bpchar)"
"                                                              ->  Index Scan using ctd010_unq on ctd010 ctd_1  (cost=0.41..1046.71 rows=1 width=51)"
"                                                                    Index Cond: (ctd_item = sd1010.d1_itemcta)"
"                                                                    Filter: (d_e_l_e_t_ <> '*'::bpchar)"
"                                                        ->  Index Scan using cth010_unq on cth010 cth_1  (cost=0.28..111.34 rows=1 width=71)"
"                                                              Index Cond: (cth_clvl = sd1010.d1_clvl)"
"                                                              Filter: (d_e_l_e_t_ <> '*'::bpchar)"
"                                                  ->  Seq Scan on se2010 e2  (cost=0.00..264544.85 rows=760511 width=42)"
"                                                        Filter: (d_e_l_e_t_ <> '*'::bpchar)"
"                                            ->  Seq Scan on sc7010 sc7  (cost=0.00..250780.94 rows=953285 width=162)"
"                                                  Filter: (d_e_l_e_t_ <> '*'::bpchar)"
"                                      ->  Seq Scan on sys_usr lgi  (cost=0.00..118.22 rows=522 width=33)"
"                                ->  Seq Scan on sys_usr lga  (cost=0.00..118.22 rows=522 width=33)"
"  ->  Subquery Scan on ""*SELECT* 3""  (cost=1349956.33..1349957.54 rows=6 width=1076)"
"        ->  Unique  (cost=1349956.33..1349957.38 rows=6 width=1094)"
"              ->  Sort  (cost=1349956.33..1349956.34 rows=6 width=1094)"
"                    Sort Key: sd1010_1.d1_filial, sd1010_1.d1_tes, sb1010_2.b1_grupo, sbm010_2.bm_desc, zz1010_2.zz1_cod, zz1010_2.zz1_desc, sd1010_1.d1_emissao, sd1010_1.d1_dtdigit, (((""substring""((sd1010_1.d1_dtdigit)::text, 1, 4) || '-'::text) || ""substring""((sd1010_1.d1_dtdigit)::text, 5, 2))), sf1010_1.f1_doc, sf1010_1.f1_serie, sf1010_1.f1_especie, ((- sd1010_1.d1_quant)), ((- sd1010_1.d1_vunit)), ((- ((sd1010_1.d1_total - sd1010_1.d1_valdesc) + sd1010_1.d1_valfre))), ((- sd1010_1.d1_baseicm)), ((- sd1010_1.d1_valicm)), ((- sd1010_1.d1_valipi)), ((- sd1010_1.d1_valins)), ((- sd1010_1.d1_valiss)), ((- sd1010_1.d1_custo)), ((- sd1010_1.d1_valimp5)), ((- sd1010_1.d1_valimp6)), ((- sd1010_1.d1_valpis)), ((- sd1010_1.d1_valcof)), ((- sd1010_1.d1_valdesc)), sf4010_2.f4_texto, sf4010_2.f4_xtpop, sx5010_2.x5_descri, sf4010_2.f4_estoque, sb1010_2.b1_cod, sd1010_1.d1_local, sb1010_2.b1_desc, sb1010_2.b1_peso, sb1010_2.b1_pesbru, ((- sd1010_1.d1_seguro)), ((- sd1010_1.d1_valfre)), sd1010_1.d1_tipo, sd1010_1.d1_fornece, sd1010_1.d1_loja, (COALESCE(sa1010_2.a1_nome, sa2010_2.a2_nome)), (COALESCE(sa1010_2.a1_cgc, sa2010_2.a2_cgc)), sd1010_1.d1_cc, sd1010_1.d1_clvl, sd1010_1.d1_itemcta, sd1010_1.d1_cf, sf4010_2.f4_sittrib, sf4010_2.f4_ctipi, sf4010_2.f4_cstpis, sf4010_2.f4_cstcof, sf4010_2.f4_cstiss, sf4010_2.f4_lficm, ((- sd1010_1.d1_despesa)), (CASE WHEN (sf1010_1.f1_valmerc > '0'::double precision) THEN (sf1010_1.f1_valirf * (sd1010_1.d1_total / sf1010_1.f1_valmerc)) ELSE '0'::double precision END), (CASE WHEN (sf1010_1.f1_valmerc > '0'::double precision) THEN (sf1010_1.f1_valcsll * (sd1010_1.d1_total / sf1010_1.f1_valmerc)) ELSE '0'::double precision END), m0_2.m0_filial, cth_2.cth_desc01, ctd_2.ctd_desc01, ctd_2.ctd_item, ctt_2.ctt_desc01, sd1010_1.d1_pedido, lgi_1.usr_codigo, lga_1.usr_codigo, sc7_1.c7_obs, e2_1.e2_naturez, sd1010_1.r_e_c_n_o_, sd1010_1.d1_valimp5, sd1010_1.d1_valimp6, sb1010_2.b1_locpad"
"                    ->  Gather  (cost=1349955.39..1349956.25 rows=6 width=1094)"
"                          Workers Planned: 2"
"                          ->  HashAggregate  (cost=1348955.39..1348955.65 rows=3 width=1094)"
"                                Group Key: sd1010_1.d1_filial, sd1010_1.d1_tes, sb1010_2.b1_grupo, sbm010_2.bm_desc, zz1010_2.zz1_cod, zz1010_2.zz1_desc, sd1010_1.d1_emissao, sd1010_1.d1_dtdigit, ((""substring""((sd1010_1.d1_dtdigit)::text, 1, 4) || '-'::text) || ""substring""((sd1010_1.d1_dtdigit)::text, 5, 2)), sf1010_1.f1_doc, sf1010_1.f1_serie, sf1010_1.f1_especie, (- sd1010_1.d1_quant), (- sd1010_1.d1_vunit), (- ((sd1010_1.d1_total - sd1010_1.d1_valdesc) + sd1010_1.d1_valfre)), (- sd1010_1.d1_baseicm), (- sd1010_1.d1_valicm), (- sd1010_1.d1_valipi), (- sd1010_1.d1_valins), (- sd1010_1.d1_valiss), (- sd1010_1.d1_custo), (- sd1010_1.d1_valimp5), (- sd1010_1.d1_valimp6), (- sd1010_1.d1_valpis), (- sd1010_1.d1_valcof), (- sd1010_1.d1_valdesc), sf4010_2.f4_texto, sf4010_2.f4_xtpop, sx5010_2.x5_descri, sf4010_2.f4_estoque, sb1010_2.b1_cod, sd1010_1.d1_local, sb1010_2.b1_desc, sb1010_2.b1_peso, sb1010_2.b1_pesbru, 0, (- sd1010_1.d1_seguro), (- sd1010_1.d1_valfre), sd1010_1.d1_tipo, 'E'::text, sd1010_1.d1_fornece, sd1010_1.d1_loja, COALESCE(sa1010_2.a1_nome, sa2010_2.a2_nome), COALESCE(sa1010_2.a1_cgc, sa2010_2.a2_cgc), sd1010_1.d1_cc, sd1010_1.d1_clvl, sd1010_1.d1_itemcta, sd1010_1.d1_cf, sf4010_2.f4_sittrib, sf4010_2.f4_ctipi, sf4010_2.f4_cstpis, sf4010_2.f4_cstcof, sf4010_2.f4_cstiss, sf4010_2.f4_lficm, (- sd1010_1.d1_despesa), CASE WHEN (sf1010_1.f1_valmerc > '0'::double precision) THEN (sf1010_1.f1_valirf * (sd1010_1.d1_total / sf1010_1.f1_valmerc)) ELSE '0'::double precision END, CASE WHEN (sf1010_1.f1_valmerc > '0'::double precision) THEN (sf1010_1.f1_valcsll * (sd1010_1.d1_total / sf1010_1.f1_valmerc)) ELSE '0'::double precision END, m0_2.m0_filial, cth_2.cth_desc01, ctd_2.ctd_desc01, ctd_2.ctd_item, ctt_2.ctt_desc01, ''::text, sd1010_1.d1_pedido, lgi_1.usr_codigo, lga_1.usr_codigo, sc7_1.c7_obs, '0'::text, 0, 0, sd1010_1.d1_emissao, e2_1.e2_naturez, ''::text, sd1010_1.r_e_c_n_o_, sd1010_1.d1_valimp5, sd1010_1.d1_valimp6, sb1010_2.b1_locpad"
"                                ->  Nested Loop Left Join  (cost=778721.59..1348954.81 rows=3 width=1094)"
"                                      Join Filter: ((lga_1.usr_id)::text = ((((((((((((SUBSTRING(sc7_1.c7_userlga FROM 11 FOR 1) || SUBSTRING(sc7_1.c7_userlga FROM 15 FOR 1)) || SUBSTRING(sc7_1.c7_userlga FROM 2 FOR 1)) || SUBSTRING(sc7_1.c7_userlga FROM 6 FOR 1)) || SUBSTRING(sc7_1.c7_userlga FROM 10 FOR 1)) || SUBSTRING(sc7_1.c7_userlga FROM 14 FOR 1)) || SUBSTRING(sc7_1.c7_userlga FROM 1 FOR 1)) || SUBSTRING(sc7_1.c7_userlga FROM 5 FOR 1)) || SUBSTRING(sc7_1.c7_userlga FROM 9 FOR 1)) || SUBSTRING(sc7_1.c7_userlga FROM 13 FOR 1)) || SUBSTRING(sc7_1.c7_userlga FROM 17 FOR 1)) || SUBSTRING(sc7_1.c7_userlga FROM 4 FOR 1)) || SUBSTRING(sc7_1.c7_userlga FROM 8 FOR 1)))"
"                                      ->  Nested Loop Left Join  (cost=778721.59..1348778.94 rows=1 width=914)"
"                                            Join Filter: ((lgi_1.usr_id)::text = ((((((((((((SUBSTRING(sc7_1.c7_userlgi FROM 11 FOR 1) || SUBSTRING(sc7_1.c7_userlgi FROM 15 FOR 1)) || SUBSTRING(sc7_1.c7_userlgi FROM 2 FOR 1)) || SUBSTRING(sc7_1.c7_userlgi FROM 6 FOR 1)) || SUBSTRING(sc7_1.c7_userlgi FROM 10 FOR 1)) || SUBSTRING(sc7_1.c7_userlgi FROM 14 FOR 1)) || SUBSTRING(sc7_1.c7_userlgi FROM 1 FOR 1)) || SUBSTRING(sc7_1.c7_userlgi FROM 5 FOR 1)) || SUBSTRING(sc7_1.c7_userlgi FROM 9 FOR 1)) || SUBSTRING(sc7_1.c7_userlgi FROM 13 FOR 1)) || SUBSTRING(sc7_1.c7_userlgi FROM 17 FOR 1)) || SUBSTRING(sc7_1.c7_userlgi FROM 4 FOR 1)) || SUBSTRING(sc7_1.c7_userlgi FROM 8 FOR 1)))"
"                                            ->  Nested Loop Left Join  (cost=778721.59..1348603.30 rows=1 width=906)"
"                                                  Join Filter: ((sd1010_1.d1_filial = sc7_1.c7_filial) AND (sd1010_1.d1_pedido = sc7_1.c7_num) AND (sd1010_1.d1_fornece = sc7_1.c7_fornece) AND (sd1010_1.d1_loja = sc7_1.c7_loja) AND (sd1010_1.d1_item = sc7_1.c7_item))"
"                                                  ->  Nested Loop Left Join  (cost=778721.59..1076373.45 rows=1 width=778)"
"                                                        Join Filter: ((sf1010_1.f1_doc = e2_1.e2_num) AND (sf1010_1.f1_serie = e2_1.e2_prefixo) AND (sf1010_1.f1_fornece = e2_1.e2_fornece) AND (sf1010_1.f1_loja = e2_1.e2_loja) AND (sf1010_1.f1_filial = e2_1.e2_filial))"
"                                                        ->  Nested Loop Left Join  (cost=778721.59..794717.10 rows=1 width=784)"
"                                                              ->  Nested Loop Left Join  (cost=778721.30..794548.20 rows=1 width=723)"
"                                                                    ->  Nested Loop Left Join  (cost=778720.89..793012.77 rows=1 width=672)"
"                                                                          Join Filter: (sd1010_1.d1_cc = ctt_2.ctt_custo)"
"                                                                          ->  Nested Loop Left Join  (cost=778720.89..792844.05 rows=1 width=631)"
"                                                                                Join Filter: ((sd1010_1.d1_tipo <> ALL ('{B,D}'::bpchar[])) AND (sd1010_1.d1_fornece = sa2010_2.a2_cod) AND (sd1010_1.d1_loja = sa2010_2.a2_loja))"
"                                                                                Filter: ((sa2010_2.d_e_l_e_t_ <> '*'::bpchar) OR (sa2010_2.d_e_l_e_t_ IS NULL))"
"                                                                                ->  Nested Loop Left Join  (cost=778720.89..786849.81 rows=1 width=598)"
"                                                                                      Join Filter: ((sd1010_1.d1_tipo = ANY ('{B,D}'::bpchar[])) AND (sd1010_1.d1_fornece = sa1010_2.a1_cod) AND (sd1010_1.d1_loja = sa1010_2.a1_loja))"
"                                                                                      Filter: ((sa1010_2.d_e_l_e_t_ <> '*'::bpchar) OR (sa1010_2.d_e_l_e_t_ IS NULL))"
"                                                                                      ->  Nested Loop Left Join  (cost=778720.89..779392.40 rows=1 width=564)"
"                                                                                            Join Filter: (sf4010_2.f4_xtpop = sx5010_2.x5_chave)"
"                                                                                            ->  Nested Loop Left Join  (cost=778720.89..778830.68 rows=1 width=508)"
"                                                                                                  Join Filter: ((sb1010_2.b1_subfam = zz1010_2.zz1_cod) AND (sb1010_2.b1_grupo = zz1010_2.zz1_fam))"
"                                                                                                  Filter: ((zz1010_2.d_e_l_e_t_ <> '*'::bpchar) OR (zz1010_2.d_e_l_e_t_ IS NULL))"
"                                                                                                  ->  Nested Loop  (cost=778720.89..778813.35 rows=1 width=477)"
"                                                                                                        Join Filter: (sd1010_1.d1_tes = sf4010_2.f4_codigo)"
"                                                                                                        ->  Nested Loop Left Join  (cost=778720.89..778735.74 rows=1 width=433)"
"                                                                                                              Join Filter: (sb1010_2.b1_grupo = sbm010_2.bm_grupo)"
"                                                                                                              Filter: ((sbm010_2.d_e_l_e_t_ <> '*'::bpchar) OR (sbm010_2.d_e_l_e_t_ IS NULL))"
"                                                                                                              ->  Merge Left Join  (cost=778720.89..778720.91 rows=1 width=402)"
"                                                                                                                    Merge Cond: (sd1010_1.d1_filial = m0_2.m0_filial)"
"                                                                                                                    ->  Sort  (cost=778703.82..778703.83 rows=1 width=360)"
"                                                                                                                          Sort Key: sd1010_1.d1_filial"
"                                                                                                                          ->  Parallel Hash Join  (cost=763232.82..778703.81 rows=1 width=360)"
"                                                                                                                                Hash Cond: (sb1010_2.b1_cod = sd1010_1.d1_cod)"
"                                                                                                                                ->  Parallel Seq Scan on sb1010 sb1010_2  (cost=0.00..15399.91 rows=18952 width=63)"
"                                                                                                                                      Filter: (d_e_l_e_t_ <> '*'::bpchar)"
"                                                                                                                                ->  Parallel Hash  (cost=763232.81..763232.81 rows=1 width=313)"
"                                                                                                                                      ->  Parallel Hash Join  (cost=616196.83..763232.81 rows=1 width=313)"
"                                                                                                                                            Hash Cond: ((sf1010_1.f1_filial = sd1010_1.d1_filial) AND (sf1010_1.f1_doc = sd1010_1.d1_doc) AND (sf1010_1.f1_serie = sd1010_1.d1_serie) AND (sf1010_1.f1_fornece = sd1010_1.d1_fornece) AND (sf1010_1.f1_loja = sd1010_1.d1_loja))"
"                                                                                                                                            ->  Parallel Seq Scan on sf1010 sf1010_1  (cost=0.00..142685.95 rows=232001 width=61)"
"                                                                                                                                                  Filter: (d_e_l_e_t_ <> '*'::bpchar)"
"                                                                                                                                            ->  Parallel Hash  (cost=616196.81..616196.81 rows=1 width=266)"
"                                                                                                                                                  ->  Parallel Seq Scan on sd1010 sd1010_1  (cost=0.00..616196.81 rows=1 width=266)"
"                                                                                                                                                        Filter: ((d_e_l_e_t_ <> '*'::bpchar) AND (d1_tipo <> 'D'::bpchar) AND (d1_filial <> ALL ('{790199,990199}'::bpchar[])) AND (d1_dtdigit >= '20240301'::bpchar) AND (d1_dtdigit <= '20240305'::bpchar) AND (d1_emissao >= '20240301'::bpchar) AND (d1_emissao <= '20240305'::bpchar))"
"                                                                                                                    ->  Sort  (cost=17.07..17.19 rows=48 width=42)"
"                                                                                                                          Sort Key: m0_2.m0_filial"
"                                                                                                                          ->  Seq Scan on sys_company m0_2  (cost=0.00..15.72 rows=48 width=42)"
"                                                                                                                                Filter: (d_e_l_e_t_ = ''::bpchar)"
"                                                                                                              ->  Seq Scan on sbm010 sbm010_2  (cost=0.00..12.53 rows=153 width=38)"
"                                                                                                        ->  Seq Scan on sf4010 sf4010_2  (cost=0.00..73.31 rows=344 width=48)"
"                                                                                                              Filter: (d_e_l_e_t_ <> '*'::bpchar)"
"                                                                                                  ->  Seq Scan on zz1010 zz1010_2  (cost=0.00..10.12 rows=412 width=43)"
"                                                                                            ->  Seq Scan on sx5010 sx5010_2  (cost=0.00..561.63 rows=7 width=63)"
"                                                                                                  Filter: ((d_e_l_e_t_ <> '*'::bpchar) AND (x5_tabela = 'ZZ'::bpchar))"
"                                                                                      ->  Seq Scan on sa1010 sa1010_2  (cost=0.00..6938.47 rows=25947 width=46)"
"                                                                                ->  Seq Scan on sa2010 sa2010_2  (cost=0.00..5566.08 rows=21408 width=45)"
"                                                                          ->  Seq Scan on ctt010 ctt_2  (cost=0.00..159.36 rows=749 width=51)"
"                                                                                Filter: (d_e_l_e_t_ <> '*'::bpchar)"
"                                                                    ->  Index Scan using ctd010_unq on ctd010 ctd_2  (cost=0.41..1535.42 rows=1 width=51)"
"                                                                          Index Cond: (ctd_item = sd1010_1.d1_itemcta)"
"                                                                          Filter: (d_e_l_e_t_ <> '*'::bpchar)"
"                                                              ->  Index Scan using cth010_unq on cth010 cth_2  (cost=0.28..168.89 rows=1 width=71)"
"                                                                    Index Cond: (cth_clvl = sd1010_1.d1_clvl)"
"                                                                    Filter: (d_e_l_e_t_ <> '*'::bpchar)"
"                                                        ->  Seq Scan on se2010 e2_1  (cost=0.00..264544.85 rows=760511 width=42)"
"                                                              Filter: (d_e_l_e_t_ <> '*'::bpchar)"
"                                                  ->  Seq Scan on sc7010 sc7_1  (cost=0.00..250780.94 rows=953285 width=162)"
"                                                        Filter: (d_e_l_e_t_ <> '*'::bpchar)"
"                                            ->  Seq Scan on sys_usr lgi_1  (cost=0.00..118.22 rows=522 width=33)"
"                                      ->  Seq Scan on sys_usr lga_1  (cost=0.00..118.22 rows=522 width=33)"
